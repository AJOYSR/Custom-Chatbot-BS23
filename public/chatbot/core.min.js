(function () {
  // Helper functions
  function isImageUrl(str) {
    return str && str.match(/^https?:\/\/.+\.(jpg|jpeg|png|gif|webp|svg)$/i);
  }

  function setButtonContent(button, iconSource) {
    if (isImageUrl(iconSource)) {
      button.innerHTML = `<img src="${iconSource}" alt="Chat" style="width:60%;height:60%;object-fit:cover;">`;
    } else {
      button.innerHTML = iconSource || 'ðŸ’¬';
    }
  }

  const n = {
    appVersion: '1.0.0',
    init: function (e) {
      console.log('ðŸš€ ~ e:', e);
      if (this.validateConfig(e)) {
        // Changed condition to positive check
        this.config = e;
        this.initElements();
        this.listenForColorUpdates();
      }
    },
    validateConfig: function (e) {
      return e && e.botId && /^[0-9a-fA-F]{24}$/.test(e.botId);
    },
    initElements: function () {
      const container = this.createContainer(this.config);
      const button = this.createButton(this.config);
      const frame = this.createFrame(this.config);

      this.button = button; // Store reference to button
      document.body.appendChild(button);
      document.body.appendChild(container);
      container.appendChild(frame);
    },
    listenForColorUpdates: function () {
      window.addEventListener('message', (event) => {
        if (event.data.type === 'BOT_COLOR' && this.button) {
          this.button.style.backgroundColor =
            event.data.color || this.config.buttonColor;
        } else if (event.data.type === 'CLOSE_CHAT') {
          const frame = document.querySelector('#bs23-chat-frame');
          if (frame) {
            frame.style.display = 'none';
          }
        }
      });
    },
    validateOrigin: function () {
      const e = document.currentScript?.src;
      if (!e) return true; // Allow if no script src (for testing)
      const t = new URL(e).origin;
      const allowedOrigins = [
        'http://localhost:4040',
        'https://your-production-domain.com',
      ];
      return allowedOrigins.includes(t);
    },
    createButton: function (e) {
      const b = document.createElement('div');
      b.id = 'bs23-chat-button';
      // Set button content based on icon type
      setButtonContent(b, e.buttonIcon);

      b.style.cssText = `position:fixed;bottom:20px;${e.position || 'right'}:20px;width:50px;height:50px;border-radius:50%;background-color:${e.buttonColor || '#4a86e8'};color:white;display:flex;align-items:center;justify-content:center;cursor:pointer;box-shadow:0 2px 6px rgba(0,0,0,0.2);font-size:24px;z-index:999999;`;
      b.onclick = () => {
        const f = document.querySelector('#bs23-chat-frame');
        if (f) {
          f.style.display = f.style.display === 'none' ? 'block' : 'none';
        }
      };
      return b;
    },
    createContainer: function (e) {
      const c = document.createElement('div');
      c.id = 'bs23-chat-widget';
      c.style.cssText = `position:fixed;bottom:90px;${e.position || 'right'}:20px;z-index:999998;`;
      return c;
    },
    createFrame: function (e) {
      const f = document.createElement('iframe');
      f.id = 'bs23-chat-frame';

      // Pass icon to iframe if provided
      const iconParam = e.icon ? `&icon=${encodeURIComponent(e.icon)}` : '';
      f.src = `${e.serverUrl || 'http://localhost:4040'}/public/chatbot/index.html?botId=${e.botId}&v=${this.appVersion}${iconParam}`;
      f.style.cssText =
        'border:none;width:400px;height:550px;border-radius:10px;box-shadow:0 4px 12px rgba(0,0,0,0.15);display:none;background:white;';
      return f;
    },
  };

  window._BS23Core = n;

  // Auto-initialize if config is already defined
  if (window._BS23ChatConfig) {
    n.init(window._BS23ChatConfig);
  }
})();
